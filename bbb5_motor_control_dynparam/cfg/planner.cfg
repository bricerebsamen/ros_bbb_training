#!/usr/bin/env python

# see for documentation:
# http://wiki.ros.org/dynamic_reconfigure/Tutorials/HowToWriteYourFirstCfgFile

PACKAGE = "bbb5_motor_control_dynparam"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

""" Arguments:
name - a string which specifies the name under which this parameter should be stored
type - defines the type of value stored, and can be any of int_t, double_t, str_t, or bool_t
level - A bitmask which will later be passed to the dynamic reconfigure callback.
        When the callback is called all of the level values for parameters that
        have been changed are ORed together and the resulting value is passed
        to the callback.
description - string which describes the parameter
default - specifies the default value
min - specifies the min value (optional and does not apply to strings and bools)
max - specifies the max value (optional and does not apply to strings and bools)
"""
gen.add("period", double_t, 0, "Planner period", 10, 0, 100)


""" The second parameter is the name of a node this could run in
(used to generate documentation only), the third parameter is a name prefix
the generated files will get (e.g. "<name>Config.h" for c++, or
"<name>Config.py" for python.
"""
exit(gen.generate(PACKAGE, "planner", "Planner"))